{"meta":{"title":"Simy的博客","subtitle":"翩翩打拳","description":"","author":"Simy","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"Java类继承","slug":"Java类继承","date":"2020-02-28T01:43:43.474Z","updated":"2020-02-28T01:43:43.474Z","comments":true,"path":"2020/02/28/Java类继承/","link":"","permalink":"http://yoursite.com/2020/02/28/Java%E7%B1%BB%E7%BB%A7%E6%89%BF/","excerpt":"","text":"继承一般发生在同一包之间 访问修饰符总结： private：本类 默认（firendly）：本类、同包 protected：本类、同包、子类 public：本类、同包、子类、其他 构造器 子类通过super调用父类构造函数，在子类构造函数的第一行使用； super的两个用途： 调用父类构造器 调用超类方法（子类的方法不能够直接访问超类的私有域，因此访问私有域时需要调用父类的公有方法作为接口） 不能访问父类private成员 子类构造函数中没有显式地调用父类构造器时，会自动的调用父类的无参构造函数；当父类不存在无参构造函数时即报错； 覆盖方法（Override）覆盖一定在继承中发生，方法值、参数表完全相同，返回值相同或是其子类，访问权限不能严于父类；注意与重载(Overload)区分。 instanceof：用于判断类，常和强制类型转换（父类转换为子类）结合使用。 1234567891011Pet pet=new Dog(); //自动类型转换，由上到下Dog dog=(Dog) pet;Penguin png=(Penguin) pet;//报错，必须转换为真实类型if(pet instanced Penguin)&#123; Penguin png=(Penguin) pet;&#125; final修饰符： 修饰的类不能再被继承 修饰的方法不能被覆盖 修饰的变量将变成常量，只能在初始化时进行赋值 多态 “is-a”规则(置换规则)：使用超类对象的任何地方都可以用子类对象置换 多态的实现思路： 子类继承父类 子类重写方法 超类引用指向子类对象 超类引用不可以调用子类特有方法 多态的实现形式： 使用父类作为方法形参 使用父类作为方法返回值","categories":[],"tags":[]},{"title":"hexo学习笔记","slug":"hexo学习笔记","date":"2020-02-28T01:40:43.924Z","updated":"2020-02-28T01:40:43.924Z","comments":true,"path":"2020/02/28/hexo学习笔记/","link":"","permalink":"http://yoursite.com/2020/02/28/hexo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"初始化博客 初始化博客 sudo hexo init hexo s //start 创建新的文章 hexo new “文章名” 修改文章可使用vim hexo clean hexo g //generate 远程部署到github cnpm install –save hexo-deployer-git 修改 _config.yml 文件的deploy部分： type: git repo: 远程仓库地址（注意远程仓库名应该与用户名相同） branch: master hexo clean hexo g hexo d //deploy 修改主题 将主题下至themes文件夹内 修改 _config.yml 文件的theme部分 hexo clean hexo g hexo d","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-02-26T01:17:04.116Z","updated":"2020-02-26T01:17:04.116Z","comments":true,"path":"2020/02/26/hello-world/","link":"","permalink":"http://yoursite.com/2020/02/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}